#!/usr/bin/env python
#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

import LoginManager
from ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print ''
  print 'Usage: ' + sys.argv[0] + ' [-h host:port] [-u url] [-f[ramed]] function [arg1 [arg2...]]'
  print ''
  print 'Functions:'
  print '  string guest_login(string guest_ip)'
  print '  VisitorCount total_visitor()'
  print '  string login(string username, string password, string user_ip)'
  print '  void logout(string session_key)'
  print '  bool update_session(string session_key)'
  print '  Session get_session(string session_key)'
  print '   get_current_online(string session_key)'
  print '  bool is_logged_in(string session_key)'
  print '  bool _update_monitor_status(string session_key, string action)'
  print ''
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = LoginManager.Client(protocol)
transport.open()

if cmd == 'guest_login':
  if len(args) != 1:
    print 'guest_login requires 1 args'
    sys.exit(1)
  pp.pprint(client.guest_login(args[0],))

elif cmd == 'total_visitor':
  if len(args) != 0:
    print 'total_visitor requires 0 args'
    sys.exit(1)
  pp.pprint(client.total_visitor())

elif cmd == 'login':
  if len(args) != 3:
    print 'login requires 3 args'
    sys.exit(1)
  pp.pprint(client.login(args[0],args[1],args[2],))

elif cmd == 'logout':
  if len(args) != 1:
    print 'logout requires 1 args'
    sys.exit(1)
  pp.pprint(client.logout(args[0],))

elif cmd == 'update_session':
  if len(args) != 1:
    print 'update_session requires 1 args'
    sys.exit(1)
  pp.pprint(client.update_session(args[0],))

elif cmd == 'get_session':
  if len(args) != 1:
    print 'get_session requires 1 args'
    sys.exit(1)
  pp.pprint(client.get_session(args[0],))

elif cmd == 'get_current_online':
  if len(args) != 1:
    print 'get_current_online requires 1 args'
    sys.exit(1)
  pp.pprint(client.get_current_online(args[0],))

elif cmd == 'is_logged_in':
  if len(args) != 1:
    print 'is_logged_in requires 1 args'
    sys.exit(1)
  pp.pprint(client.is_logged_in(args[0],))

elif cmd == '_update_monitor_status':
  if len(args) != 2:
    print '_update_monitor_status requires 2 args'
    sys.exit(1)
  pp.pprint(client._update_monitor_status(args[0],args[1],))

transport.close()
