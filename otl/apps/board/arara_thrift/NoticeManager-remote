#!/usr/bin/env python
#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

import NoticeManager
from ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print ''
  print 'Usage: ' + sys.argv[0] + ' [-h host:port] [-u url] [-f[ramed]] function [arg1 [arg2...]]'
  print ''
  print 'Functions:'
  print '  string get_banner()'
  print '  string get_welcome()'
  print '   list_banner(string session_key)'
  print '   list_welcome(string session_key)'
  print '  void add_banner(string session_key, WrittenNotice notice_reg_dic)'
  print '  void add_welcome(string session_key, WrittenNotice notice_reg_dic)'
  print '  void remove_banner(string session_key, i32 id)'
  print '  void remove_welcome(string session_key, i32 id)'
  print ''
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = NoticeManager.Client(protocol)
transport.open()

if cmd == 'get_banner':
  if len(args) != 0:
    print 'get_banner requires 0 args'
    sys.exit(1)
  pp.pprint(client.get_banner())

elif cmd == 'get_welcome':
  if len(args) != 0:
    print 'get_welcome requires 0 args'
    sys.exit(1)
  pp.pprint(client.get_welcome())

elif cmd == 'list_banner':
  if len(args) != 1:
    print 'list_banner requires 1 args'
    sys.exit(1)
  pp.pprint(client.list_banner(args[0],))

elif cmd == 'list_welcome':
  if len(args) != 1:
    print 'list_welcome requires 1 args'
    sys.exit(1)
  pp.pprint(client.list_welcome(args[0],))

elif cmd == 'add_banner':
  if len(args) != 2:
    print 'add_banner requires 2 args'
    sys.exit(1)
  pp.pprint(client.add_banner(args[0],eval(args[1]),))

elif cmd == 'add_welcome':
  if len(args) != 2:
    print 'add_welcome requires 2 args'
    sys.exit(1)
  pp.pprint(client.add_welcome(args[0],eval(args[1]),))

elif cmd == 'remove_banner':
  if len(args) != 2:
    print 'remove_banner requires 2 args'
    sys.exit(1)
  pp.pprint(client.remove_banner(args[0],eval(args[1]),))

elif cmd == 'remove_welcome':
  if len(args) != 2:
    print 'remove_welcome requires 2 args'
    sys.exit(1)
  pp.pprint(client.remove_welcome(args[0],eval(args[1]),))

transport.close()
